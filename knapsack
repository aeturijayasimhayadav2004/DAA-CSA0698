#include <stdio.h>

struct Item {
    int value;
    int weight;
    float ratio; // value/weight ratio
};

// Function to compare two items based on their value/weight ratio
int compare(const void *a, const void *b) {
    float ratio1 = ((struct Item *)a)->ratio;
    float ratio2 = ((struct Item *)b)->ratio;
    return (ratio1 < ratio2) ? 1 : -1; // Sort in descending order
}

float knapsack(struct Item items[], int n, int capacity) {
    qsort(items, n, sizeof(struct Item), compare); // Sort items by ratio

    float totalValue = 0.0;
    for (int i = 0; i < n; i++) {
        if (items[i].weight <= capacity) {
            capacity -= items[i].weight;
            totalValue += items[i].value;
        } else {
            totalValue += items[i].value * ((float)capacity / items[i].weight);
            break; // Knapsack is full
        }
    }
    return totalValue;
}

int main() {
    int n, capacity;

    printf("Enter the number of items: ");
    scanf("%d", &n);

    struct Item items[n];

    printf("Enter the value and weight of each item:\n");
    for (int i = 0; i < n; i++) {
        scanf("%d %d", &items[i].value, &items[i].weight);
        items[i].ratio = (float)items[i].value / items[i].weight; // Calculate ratio
    }

    printf("Enter the capacity of the knapsack: ");
    scanf("%d", &capacity);

    float maxValue = knapsack(items, n, capacity);
    printf("Maximum value in the knapsa
