#include <stdio.h>

#define MAX_CAPACITY 100 // Define the maximum capacity of the container

int max(int a, int b) {
    return (a > b) ? a : b;
}

int containerLoader(int capacity, int weights[], int values[], int n) {
    int dp[n + 1][capacity + 1];

    for (int i = 0; i <= n; i++) {
        for (int w = 0; w <= capacity; w++) {
            if (i == 0 || w == 0) {
                dp[i][w] = 0; // Base case: no items or no capacity
            } else if (weights[i - 1] <= w) {
                dp[i][w] = max(values[i - 1] + dp[i - 1][w - weights[i - 1]], dp[i - 1][w]);
            } else {
                dp[i][w] = dp[i - 1][w]; // Cannot include the item
            }
        }
    }
    return dp[n][capacity]; // Maximum value that can be loaded
}

int main() {
    int n;

    printf("Enter the number of containers: ");
    scanf("%d", &n);

    int weights[n], values[n];
    printf("Enter the weights of the containers:\n");
    for (int i = 0; i < n; i++) {
        scanf("%d", &weights[i]);
    }

    printf("Enter the values of the containers:\n");
    for (int i = 0; i < n; i++) {
        scanf("%d", &values[i]);
    }

    int capacity;
    printf("Enter the capacity of the container: ");
    scanf("%d", &capacity);

    int maxValue = containerLoader(capacity, weights, values, n);
    printf("The maximum value that can be loaded into the container is: %d\n", maxValue);

    return 0;
}
